---
#:TODO: When the time comes, split this file in different roles
- hosts: rpis
  tasks:
  #    - name: test connection
  #      ping:
  #
##################
#Users and groups#
##################
    - name: Ensure groups ansible and docker exist
      become: yes
      group:
        name: "{{ item }}"
        state: present
      with_items:
        - ansible
        - docker
  
    - name: Load passwords from vault
      #Passwords must be stored in the file located in vars/usres/user_passwords.yml. This file contains entries for each account to create, associated to passwords hosted with sha512
      include_vars:
        file: users/user_passwords.yml
        name: user_passwords

#    - debug:
#        var: user_passwords

    - name: Create users
      become: yes
      user:
        name: "{{item.key}}"
        password: "{{item.value}}"
        groups: ansible, docker, sudo   # Empty by default.
      with_dict: "{{ user_passwords }}"


#TODO: Add abitility to run an ansible role per user for personalisation
#TODO: Exchange user ssh keys for transparent interhost ssh connexions
#TODO: Update .ssh/config for each user to make ssh easy   (=> think a little bit about hostname changes etc... so that the .ssh/config files stay uptodate.
#TODO: Add an administrative neutral account for bash tasks, general maintenance (juste change the pi account password??)


#####################
#Installing software#
#####################
    - name: Update repositories cache and install usefull packages
      become: yes
      apt:
        name: "{{ item }}"
        update_cache: yes
        cache_valid_time: 3600
      with_items:
        - git
        - vim-nox
        - curl
        - python-pip
        - virtualenv
#        - python3-pip

    - name: Remove dependencies that are no longer required
      become: yes
      apt:
        autoremove: yes
#
#TODO: Make docker install idempotent again
    - name: Run docker installation convienice script
      script: ./files/install_docker.sh

    - name: Install docker-compose using pip
      become: yes
      pip:
        name: docker-compose

#TODO: Install Bonjour, Avahi or Zeroconf


################################
#Creating directories structure#
################################
    - name: ansible create multiple directory example
      become: yes
      file:
        path: "{{ item.dest }}"
        group: "{{ item.group }}"
        mode: "{{ item.mode }}"
        state: directory
      with_items:
        - { dest: '/docker', group: 'root', mode: '0755' }
        - { dest: '/docker/src', group: 'docker', mode: '0775' }
        - { dest: '/docker/volumes', group: 'docker', mode: '0775' }
        - { dest: '/docker/configs', group: 'docker', mode: '0775' }
        - { dest: '/ansible', group: 'ansible', mode: '0775' }

#TODO: Clone dockerfiles and Docker-composes
#TODO: Create the volumes needed for the different services (should use a different role!!)


############################
#Syncronise time on servers#
############################


#######################
#Set hostnames and IPs#
#######################


######################################
#Install and config glusterfs volumes#
######################################


####################################
#Launch appropriate docker services#   #TODO: Think a little bit if this is really the appropriate place for this
####################################
