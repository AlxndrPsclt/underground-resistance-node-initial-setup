##---
## tasks file for gluster
#
######################
##Installing software#
######################
#- name: Update repositories cache and install gluster server and client
#  become: yes
#  apt:
#    name: ['glusterfs-server', 'glusterfs-client']
#    update_cache: yes
#    cache_valid_time: 3600
#
#- name: enable service glusterfs
#  systemd:
#    name: glusterd
#    #scope: user
#  state: started
#  enabled: yes
#  masked: no
#  become: yes
#
#- name: Ansible register variable basic example
#  shell: "blkid -o export /dev/mmcblk0p3"
#  register: blkid_output
#  become: true
#  changed_when: False
#
#- name: Display partuid of data partition
#  debug:
#    var: blkid_output["stdout_lines"]
#
#- name: Add folder for glusterfs mount
#  become: yes
#  file:
#    path: "/shared/mmcblk0p3"
#    owner: "root"
#    group: "docker"
#    state: directory
#
#- name: Mount up device by PARTUID
#  mount:
#    path: /shared/mmcblk0p3
#    src: "{{ blkid_output['stdout_lines'][3] }}"
#    fstype: ext4
#    opts: defaults
#    state: mounted
#    backup: yes
#  become: yes
#
#- name: Add folder for glusterfs brick
#  become: yes
#  file:
#    path: "/shared/mmcblk0p3/brick"
#    owner: "root"
#    group: "docker"
#    state: directory
#
#- name: Display result of inventory_hostname
#  set_fact:
#    next_node: "{{ 'etrnl-%03d.local' | format(inventory_hostname | regex_replace('^etrnl-(\\d*).local$', '\\1') | int + 1) }}"
#
#- name: Display partuid of data partition
#  debug:
#    var: next_node
#
#- name: Glusterfs peer probe
#  shell: "gluster peer probe {{ item }}"
#  become: true
#  loop:
#    - etrnl-002.local
#    - etrnl-003.local
#    - etrnl-004.local
#    - etrnl-005.local
#    - etrnl-006.local
#  run_once: true
#
#- name: Upgrade all packages to the latest version
#  become: yes
#  apt:
#    name: "*"
#    state: latest
#
#- name: Update repositories cache and install fuse3
#  become: yes
#  apt:
#    name: ['libfuse3-3', 'fuse3']
#    update_cache: yes
#    cache_valid_time: 3600
#  register: fuseinstall
#
#- name: Reboot a slow machine that might have lots of updates to apply
#  become: yes
#  reboot:
#    reboot_timeout: 180
#  throttle: 1
#  when: fuseinstall.changed
#
#- name: Add the fuse module
#  become: yes
#  modprobe:
#    name: fuse
#    state: present
#
#- name: create gluster volume
#  become: yes
#  gluster_volume:
#    state: present
#    name: gv0
#    bricks: /shared/mmcblk0p3/brick
#    rebalance: yes
#    replicas: 3
#    cluster:
#      - etrnl-001.local
#      - etrnl-002.local
#      - etrnl-003.local
#      - etrnl-004.local
#      - etrnl-005.local
#      - etrnl-006.local
#  run_once: true
#
#- name: start gluster volume
#  become: yes
#  gluster_volume:
#    state: started
#    name: gv0
#
#- name: Add folder for mounting glusterfs volume
#  become: yes
#  file:
#    path: "/mnt/gv0"
#    owner: "{{ USER }}"
#    group: "{{ USER }}"
#    state: directory
#
#- name: Mount Glusterfs basic volume
#  become: yes
#  mount:
#    path: /mnt/gv0
#    src: localhost:/gv0
#    fstype: glusterfs
#    opts: defaults,_netdev,backupvolfile-server=localhost
#    state: mounted
#
#
#
#- name: Glusterfs docker plugin install
#  shell: "docker plugin install --alias glusterfs   trajano/glusterfs-volume-plugin   --grant-all-permissions --disable"
#  register: glusterplugin
#  changed_when: "'already exists' not in glusterplugin.stderr"
#  failed_when: "'already exists' not in glusterplugin.stderr"
#
#  #TODO: Add checking to make idempotent
#- name: Glusterfs docker plugin set cluster servers
#  shell: "docker plugin set glusterfs SERVERS=etrnl-001.local,etrnl-002.local,etrnl-003.local,etrnl-004.local,etrnl-005.local,etrnl-006.local"
#
#- debug: msg="play_hosts={{play_hosts}}"
#
- name: Clone etrnl services scripts
  git:
    repo: git@gitlab.com:Underground-Resistance/etrnl-services.git
    dest: /mnt/gv0/deploys/etrnl-services
    key_file: "{{ HOME }}/.ssh/keys/id_ed25519.deploy.gitlab.priv"
    force: yes
  run_once: true
#
#
#- name: Create a docker traefik network
#  docker_network:
#    name: traefik_net
#    driver: overlay
#  run_once: true
#
#
#- name: Install virtualenv & cie using pip
#  become: yes
#  pip:
#    name: ['jsondiff']
#
- name: Deploy a traefik stack from a compose file
  docker_stack:
    state: present
    name: traefik
    compose:
      - /mnt/gv0/deploys/etrnl-services/etrnl-traefik-deploy/traefik-compose.yml
  run_once: true
#
#- name: Deploy a whoami stack from a compose file
#  docker_stack:
#    state: present
#    name: whoami
#    compose:
#      - /mnt/gv0/deploys/etrnl-services/etrnl-whoami-deploy/whoami-compose.yml
#  run_once: true

- name: Create a docker gitea network
  docker_network:
    name: gitea_net
    driver: overlay
  run_once: true

- name: Add folder for gitea logs
  become: yes
  file:
    path: "/docker/logs/gitea"
    owner: "{{ USER }}"
    group: "{{ USER }}"
    state: directory

- name: Add folder for gitea volumes
  become: yes
  file:
    path: "/mnt/gv0/volumes/gitea/gitea/varlibgitea"
    owner: "{{ USER }}"
    group: "{{ USER }}"
    state: directory
  run_once: true

- name: Add folder for gitea volume 2
  become: yes
  file:
    path: "/mnt/gv0/volumes/gitea/gitea/usrsharegitea"
    owner: "{{ USER }}"
    group: "{{ USER }}"
    state: directory
  run_once: true

- name: Add folder for gitea-db volume
  become: yes
  file:
    path: "/mnt/gv0/volumes/gitea/gitea-db/config"
    owner: "{{ USER }}"
    group: "{{ USER }}"
    state: directory
  run_once: true

- name: Deploy a gitea stack from a compose file
  docker_stack:
    state: present
    name: gitea
    compose:
      - /mnt/gv0/deploys/etrnl-services/etrnl-gitea-deploy/gitea-compose.yml
  run_once: true

