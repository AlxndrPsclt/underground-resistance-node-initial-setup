---
# tasks file for basic-config: cloning bashconfig, password store etc... + usuall software install

  #TODO: Add abitility to run an ansible role, or playbook per user for personalisation
  #TODO: Exchange user ssh keys for transparent interhost ssh connexions: the connexions between hosts are still not ssh
  #TODO: Update .ssh/config for each user to make ssh easy   (=> think a little bit about hostname changes etc... so that the .ssh/config vars stay uptodate.
  #

#####################
#Installing software#
#####################
- name: Update repositories cache and install the most needed basic tools
  become: yes
  apt:
    #name: ['git', 'vim-nox', 'curl', 'python-pip', 'git-crypt', 'gpg', 'pass']
    name: ['git', 'pass']
    update_cache: yes
    cache_valid_time: 3600

- name: Configs git usual name
  git_config:
    name: user.name
    scope: global
    value: 'alxndrpsclt'

    #TODO: Properly extract personal conf from playbook

- name: Configs git usual email
  git_config:
    name: user.email
    scope: global
    value: 'alxndr.psclt@gmail.com'

- name: Configs git editor
  git_config:
    name: core.editor
    scope: global
    value: vim


- name: Clone password-store from server
  git:
    repo: 'git@gitlab.com:AlxndrPsclt/password-store.git'
    dest: "{{ HOME }}/.password-store"
    key_file: "{{ HOME }}/.ssh/keys/id_ecdsa.deploy.password-store.github"




- name: Update repositories cache and install some almost necessary tools
  become: yes
  apt:
    name: ['vim-nox', 'curl', 'python-pip', 'silversearcher-ag', 'fzf', 'mlocate', 'vifm']
    update_cache: yes
    cache_valid_time: 3600


- name: Clone personal vimconfig
  git:
    repo: 'https://github.com/AlxndrPsclt/dotvim.git'
    dest: "{{ HOME }}/.vim"

- name: Clone Vundle for vim plugins
  git:
    repo: 'https://github.com/VundleVim/Vundle.vim.git'
    dest: "{{ HOME }}/.vim/bundle/Vundle.vim"



- name: Install virtualenv & cie using pip
  become: yes
  pip:
    name: ['virtualenv', 'virtualenvwrapper']

- name: Remove dependencies that are no longer required
  become: yes
  apt:
    autoremove: yes

- meta: end_play    #Usefull for dev: ends the play right here

    #TODO: Make docker install idempotent again
    # - name: Run docker installation convenience script
    #   script: ./files/install_docker.sh
    #   register: docker_script_result

    # - debug:
    #     var: docker_script_result

    # - name: Install docker-compose using pip
    #   become: yes
    #   pip:
    #     name: docker-compose


    #################################
    ##Creating directories structure#
    #################################
- name: Create multiple directory example
  become: yes
  file:
    path: "{{ item.dest }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    state: directory
  with_items:
    - { dest: '/docker', group: 'root', mode: '0755' }
    - { dest: '/docker/src', group: 'docker', mode: '0775' }
    - { dest: '/docker/volumes', group: 'docker', mode: '0775' }
    - { dest: '/docker/configs', group: 'docker', mode: '0775' }
      #- { dest: '/ansible', group: 'ansible', mode: '0775' }

      ##TODO: Clone dockerfiles and Docker-composes: complete template
      # - name: Clone docker projects to run cluster services
      #   git:
      #     repo: ssh://git@github.com/mylogin/hello.git
      #     dest: /docker

      ##TODO: Create the volumes needed for the different services (should use a different role!!)


      ############################
      #Syncronise time on servers#
      ############################
      # - name: Set timezone to Europe/Paris
      #   timezone:
      #     name: Europe/Paris


  ################################
  #Install and config pcs cluster# TODO: mtache
  ################################


  ######################################
  #Install and config glusterfs volumes# TODO: mtache
  ######################################

  ####################
  #Overclock the RPIs#
  ####################
  #    - name: Copy a config.txt file that allows for overclocking
  #      become: yes
  #      copy:
  #        src: ./files/config.txt
  #        dest: /boot/config.txt

  ####################
  #Init or join swarm# TODO: mtache
  ####################

  ####################################
  #Launch appropriate docker services#   #TODO: Think a little bit if this is really the appropriate place for this
  ####################################

  ###################################
  #Changes pi passwords for security#   #TODO: Think a little bit if this is really the appropriate place for this
  ####################################
