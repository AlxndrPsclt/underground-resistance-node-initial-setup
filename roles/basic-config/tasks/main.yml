---
# tasks file for basic-config: cloning bashconfig, password store etc... + usuall software install

  #TODO: Add abitility to run an ansible role, or playbook per user for personalisation
  #TODO: Exchange user ssh keys for transparent interhost ssh connexions: the connexions between hosts are still not ssh
  #TODO: Update .ssh/config for each user to make ssh easy   (=> think a little bit about hostname changes etc... so that the .ssh/config vars stay uptodate.
  #

#####################
#Installing software#
#####################
- name: Update repositories cache and install the most needed basic tools
  become: yes
  apt:
    #name: ['git', 'vim-nox', 'curl', 'python-pip', 'git-crypt', 'gpg', 'pass']
    name: ['git', 'pass']
    update_cache: yes
    cache_valid_time: 3600

- name: Configs git usual name
  git_config:
    name: user.name
    scope: global
    value: 'alxndrpsclt'

    #TODO: Properly extract personal conf from playbook

- name: Configs git usual email
  git_config:
    name: user.email
    scope: global
    value: 'alxndr.psclt@gmail.com'

- name: Configs git editor
  git_config:
    name: core.editor
    scope: global
    value: vim


- name: Clone password-store from server
  git:
    repo: 'git@gitlab.com:AlxndrPsclt/password-store.git'
    dest: "{{ HOME }}/.password-store"
    key_file: "{{ HOME }}/.ssh/keys/id_ecdsa.deploy.password-store.gitlab.priv"


- name: Update repositories cache and install some almost necessary tools
  become: yes
  apt:
    name: ['vim-nox', 'curl', 'python-pip', 'silversearcher-ag', 'fzf', 'mlocate', 'vifm', 'tmux']
    update_cache: yes
    cache_valid_time: 3600


- name: Clone personal vimconfig
  git:
    repo: 'git@github.com:AlxndrPsclt/dotvim.git'
    dest: "{{ HOME }}/.vim"
    key_file: "{{ HOME }}/.ssh/keys/id_ecdsa.deploy.github.priv"


- name: Clone Vundle for vim plugins
  git:
    repo: 'git@github.com:VundleVim/Vundle.vim.git'
    dest: "{{ HOME }}/.vim/bundle/Vundle.vim"
    key_file: "{{ HOME }}/.ssh/keys/id_ecdsa.deploy.github.priv"

- name: Clone personal bash config
  git:
    repo: 'git@github.com:AlxndrPsclt/configPerso.git'
    dest: "{{ HOME }}/.config/perso"
    key_file: "{{ HOME }}/.ssh/keys/id_ecdsa.deploy.github.priv"

- name: Register existence of workstation config links
  stat:
    path: "{{ item.dest }}"
  loop: "{{ links_to_create }}"
  register: link_register

- name: Remove config file if some default exists (not links)
  file:
    path: "{{ item.stat.path }}"
    state: absent
  loop: "{{ link_register.results }}"
  when: item.stat.islnk is defined and item.stat.islnk == False

- name: Create symbolic link for workstation config tools
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  loop: "{{ links_to_create }}"


- name: Install virtualenv & cie using pip
  become: yes
  pip:
    name: ['virtualenv', 'virtualenvwrapper']

- name: Remove dependencies that are no longer required
  become: yes
  apt:
    autoremove: yes


#################
##Install docker#
#################

- name: update repositories cache and install some tools needed for docker install
  become: yes
  apt:
    name: [ 'apt-transport-https', 'ca-certificates', 'curl', 'gnupg2', 'software-properties-common']
    update_cache: yes
    cache_valid_time: 3600

- name: Add docker Apt signing key, will not download if present
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present
  become: yes

- name: add docker apt repository
  apt_repository:
    repo: 'deb [arch=armhf] https://download.docker.com/linux/raspbian      buster stable'  #TODO: Add automatic filling of buster stable instead of incoding it{
    state: present
    update_cache: yes
  become: yes

- name: update repositories cache and install some tools needed for docker install
  become: yes
  apt:
    name: [ 'docker-ce', 'cgroupfs-mount' ]
    install_recommends: no

- name: enable service docker
  systemd:
    name: docker
    #scope: user
    state: started
    enabled: yes
    masked: no


- name: Update repositories cache and install tools necessary for docker-compose
  become: yes
  apt:
    name: [ 'libffi-dev', 'python-backports.ssl-match-hostname' ]
    update_cache: yes
    cache_valid_time: 3600

- name: Install virtualenv & cie using pip
  become: yes
  pip:
    name: ['docker-compose']

#################################
##Creating directories structure#
#################################
- name: Create multiple docker directories
  become: yes
  file:
    path: "{{ item.dest }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    state: directory
  with_items:
    - { dest: '/docker', group: 'root', mode: '0755' }
    - { dest: '/docker/src', group: 'docker', mode: '0775' }
    - { dest: '/docker/volumes', group: 'docker', mode: '0775' }
    - { dest: '/docker/configs', group: 'docker', mode: '0775' }
      #- { dest: '/ansible', group: 'ansible', mode: '0775' }
      #
#- meta: end_play    #Usefull for dev: ends the play right here

      ##TODO: Clone dockerfiles and Docker-composes: complete template
      # - name: Clone docker projects to run cluster services
      #   git:
      #     repo: ssh://git@github.com/mylogin/hello.git
      #     dest: /docker

      ##TODO: Create the volumes needed for the different services (should use a different role!!)


  ################################
  #Install and config pcs cluster# TODO: mtache
  ################################


  ######################################
  #Install and config glusterfs volumes# TODO: mtache
  ######################################

  ####################
  #Overclock the RPIs#
  ####################
  #    - name: Copy a config.txt file that allows for overclocking
  #      become: yes
  #      copy:
  #        src: ./files/config.txt
  #        dest: /boot/config.txt
